package com.zhuika.action;

import java.io.PrintWriter;
import java.sql.Timestamp;
import java.util.HashMap;
import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;

import org.apache.struts2.interceptor.ServletRequestAware;
import org.apache.struts2.interceptor.ServletResponseAware;
import org.springframework.stereotype.Controller;

import com.common.ejb.EJBTime;
import com.watch.ejb.RewardList;
import com.watch.ejb.Serialnumber;
import com.watch.ejb.UserWatch;

import com.zhuika.service.RewardListService;
import com.zhuika.service.SerialNumberService;
import com.zhuika.service.UserService;
import com.zhuika.util.Jsonconf;
import com.zhuika.util.Tools;
import com.zhuika.util.UploadUtil;


@Controller
public class RewardAction  extends BaseAction implements ServletRequestAware,
ServletResponseAware {

	private static final long serialVersionUID = 1L;
	private HttpServletRequest request;
	private HttpServletResponse response;
	
	@Resource
	private RewardListService rewardListService;
	@Resource
	private UserService userService;
	@Resource
	private SerialNumberService serialNumService;
	
	public void setServletRequest(HttpServletRequest request) {
	this.request=request;		
	}
	
	public void setServletResponse(HttpServletResponse response) {
	this.response=response;	
	}


	public void newReWard(){
		PrintWriter out=null;
		JSONObject json=new JSONObject();
		try {
			request.setCharacterEncoding("utf-8");
			response.setContentType("text/json"); 
			response.setCharacterEncoding("utf-8");
			out=response.getWriter();
				
			String usrid = request.getParameter("usrid");
			String serialnumid = request.getParameter("serialnumid");
			RewardList rewardListInfo = new RewardList();
			UserWatch user =null;
			Serialnumber serialnum = null;
			UploadUtil uploadObj = new UploadUtil();
			String rewardid=UUID.randomUUID().toString();
			
			UploadUtil.refData refdata = uploadObj.new refData();
			
			if(usrid!=null && usrid.length()>0){
				user = userService.Find(usrid);
				
			}
			if(serialnumid!=null && serialnumid.length()>0){
				serialnum = serialNumService.Find(serialnumid);
			}

			
			if (usrid!=null && usrid.length()>0 && user == null) {
				json.put("state", 2);
				json.put("info", "此用户不存在");
				json.put("usrid","");
				json.put("imgurl", "");
				
				out.print(json);
				out.close();
				
				return ;
			} 
			if (serialnumid!=null && serialnumid.length()>0 && serialnum == null) {
				json.put("state", 2);
				json.put("info", "此序列号不存在");
				json.put("usrid","");
				json.put("imgurl", "");
				
				out.print(json);
				out.close();
				
				return ;
			}
			if (serialnumid!=null && serialnumid.length()>0 && serialnum != null && user != null){
				refdata.setImgurl("uprewardimg");
				refdata.setPicurlid(rewardid);
				
			}
						
			refdata.setStatus(1);
			 
			String imgPath = uploadObj.SaveImg(this.request, refdata);
			
			String info = "";
			if(refdata.getStatus() == 2){
				info = "上传文件后缀不正确，只允许:";
				int allowedExtCount = uploadObj.allowedExt.length;
				for (int allowFlag = 0; allowFlag < allowedExtCount; allowFlag++)
					info +="*." + uploadObj.allowedExt[allowFlag].toLowerCase()+" ";					
			}
			else if(refdata.getStatus() == 3){
				info = "文件大小不允许大于1M";
			}
			else if(refdata.getStatus() == 1){
				
				rewardListInfo.setFrewardid(rewardid);
				rewardListInfo.setFuserid(usrid);
				rewardListInfo.setFsnid(serialnumid);
				rewardListInfo.setFtitle(Tools.DecodeUtf8String(request.getParameter("title")));
			
				rewardListInfo.setFcontent(Tools.DecodeUtf8String(request.getParameter("content")));
				rewardListInfo.setFscore(request.getParameter("score"));
				rewardListInfo.setFproduct(request.getParameter("product"));
				rewardListInfo.setFpicture(imgPath);				
				Timestamp datetime = EJBTime.getTimeStamp();

				rewardListInfo.setFaddtime(datetime);
				rewardListInfo.setFupdatetime(datetime);
				
				String sCategory= request.getParameter("category");
				if(sCategory!=null && sCategory.equals("1"))
				{
					rewardListInfo.setFcategory(1);
				}
				
				rewardListService.AddRewardList(rewardListInfo);
			}
				
			json.put("state", 1);
			json.put("info", "成功发送奖励信息");
			
			JsonConfig  jconfig = Jsonconf.getSerialnumJsonConf(request);
			jconfig.setExcludes(new String[] {"faddtime", "fincreaseid", "forder", "fproductid","fendtime","ffieldstatus"});
			
			json.put("data", JSONObject.fromObject(rewardListInfo, jconfig));
			

		} catch (Exception e) {
			json.put("state", -1);
			json.put("info", e.getMessage());
			json.put("data", null);	
		} finally{	
			out.print(json);
			out.close();
		}
	}
	
	public void searchReWard(){
		
		PrintWriter out=null;
		JSONObject json=new JSONObject();
		try {
			request.setCharacterEncoding("utf-8");
			response.setContentType("text/json"); 
			response.setCharacterEncoding("utf-8");
			out=response.getWriter();		
			
			String usrid = request.getParameter("usrid");
			String serialnumid = request.getParameter("serialnumid");			
			HashMap<String, String> map = new HashMap<String, String>();
			map.put("usrid", usrid);
			map.put("serialnumid", serialnumid);
			
			List<RewardList> rewardlist=rewardListService.ListRewardList(0, 1000, map); 	
			json.put("state", 1);
			json.put("info", "成功查询奖励信息");
			
			JsonConfig  jconfig = Jsonconf.getSerialnumJsonConf(request);
			jconfig.setExcludes(new String[] {"faddtime", "fincreaseid", "forder", "fproductid" ,"fendtime","ffieldstatus"});
			json.put("data", JSONArray.fromObject(rewardlist, jconfig));
			//json.put("data", rewardlist);	

		} catch (Exception e) {
			json.put("state", -1);
			json.put("info", e.getMessage());
			json.put("data", null);	
		} finally{	
			out.print(json);
			out.close();
		}
	}
		
	public void sendFromList(){			
		PrintWriter out=null;
		JSONObject json=new JSONObject();
		try {
			request.setCharacterEncoding("utf-8");
			response.setContentType("text/json"); 
			response.setCharacterEncoding("utf-8");
			out=response.getWriter();		
			
//			String usrid = request.getParameter("usrid");
//			String serialnumid = request.getParameter("serialnumid");
//			String frewardid= request.getParameter("frewardid");

	
			json.put("state", 1);
			json.put("info", "成功提交发送到目标手表");


		} catch (Exception e) {
			json.put("state", -1);
			json.put("info", e.getMessage());
			json.put("data", null);	
		} finally{	
			out.print(json);
			out.close();
		}
	}
}
